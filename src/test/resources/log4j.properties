##
# This is the default log4j configuration for distribution and CI tests.
##

# Note: logging at INFO or DEBUG will significantly impact throughput!
log4j.rootCategory=WARN, dest2

# Use the lambda logger for conditional logging
#log4j.loggerFactory=com.blazegraph.gremlin.util.LambdaLoggerFactory

log4j.logger.com.bigdata=ERROR
log4j.logger.com.bigdata.Banner=ERROR
log4j.logger.com.bigdata.util.MillisecondTimestampFactory=ERROR
log4j.logger.com.bigdata.rdf.ServiceProviderHook=ERROR
log4j.logger.com.bigdata.btree=WARN
log4j.logger.com.bigdata.counters.History=ERROR
log4j.logger.com.bigdata.counters.XMLUtility$MyHandler=ERROR
log4j.logger.com.bigdata.counters.query.CounterSetQuery=INFO
log4j.logger.com.bigdata.journal.CompactTask=INFO
log4j.logger.com.bigdata.relation.accesspath.BlockingBuffer=ERROR
log4j.logger.com.bigdata.rdf.load=INFO
log4j.logger.com.bigdata.rdf.store.DataLoader=INFO
log4j.logger.com.bigdata.resources.AsynchronousOverflowTask=INFO

log4j.logger.info.aduna.lang.service.ServiceRegistry=ERROR
log4j.logger.org.openrdf.rio=ERROR
log4j.logger.org.openrdf.query.resultio=ERROR
#log4j.logger.com.bigdata.txLog=INFO
#log4j.logger.com.bigdata.rdf.sparql.ast.optimizers.ASTALPServiceOptimizer=ALL
#log4j.logger.com.bigdata.rdf.sparql.ast.optimizers.ASTOptimizerList=DEBUG
#log4j.logger.com.bigdata.rdf.sparql.ast.optimizers.ASTRunFirstRunLastOptimizer=DEBUG
#log4j.logger.com.bigdata.bop.paths.ArbitraryLengthPathOp=ALL
#log4j.logger.com.bigdata.blueprints.BigdataGraph.SparqlLogger=ALL
#log4j.logger.com.bigdata.blueprints.BigdataGraphEmbedded=ALL
#log4j.logger.com.bigdata.blueprints.BigdataQueryProjection=ALL
#log4j.logger.com.bigdata.rdf.sparql.ast.ArbitraryLengthPathNode=ALL
#log4j.logger.com.bigdata.rdf.sparql.ast.eval.AST2BOpUtility=ALL
#log4j.logger.com.bigdata.rdf.sparql.ast=ALL
#log4j.logger.com.bigdata.rdf.sparql.ast.optimizers.ASTSimpleGroupByAndCountOptimizer=ALL
#log4j.logger.com.bigdata.rdf.sail.RDRHistory=ALL
#log4j.logger.com.bigdata.rdf.sail.RDRHistoryServiceFactory=ALL
#log4j.logger.com.bigdata.rdf.lexicon.LexiconRelation=DEBUG
#log4j.logger.com.bigdata.rdf.sparql.ast.optimizers.ASTStaticJoinOptimizer=ALL
#log4j.logger.com.bigdata.rdf.sparql.ast.optimizers.ASTCardinalityOptimizer=ALL
#log4j.logger.com.bigdata.rdf.rio.StatementBuffer=ALL
#log4j.logger.com.bigdata.rdf.sparql.ast.eval.ASTEvalHelper=ALL
#log4j.logger.com.bigdata.rdf.sparql.ast.eval.AST2BOpUpdate=DEBUG

log4j.logger.com.blazegraph.gremlin.structure.BlazeGraph.SparqlLog=INFO
log4j.logger.com.blazegraph.gremlin.structure.TestBlazeGraph=ALL
log4j.logger.com.blazegraph.gremlin.structure.TestHistory=ALL
log4j.logger.com.blazegraph.gremlin.structure.TestListeners=ALL

# Test suite loggers.
#log4j.logger.junit=INFO
#log4j.logger.com.bigdata.btree.AbstractBTreeTestCase=INFO
log4j.logger.junit.framework.TestCase2=ERROR

# dest1
log4j.appender.dest1=org.apache.log4j.ConsoleAppender
log4j.appender.dest1.layout=org.apache.log4j.PatternLayout
log4j.appender.dest1.layout.ConversionPattern=%-5p: %r %l: %m%n
#log4j.appender.dest1.layout.ConversionPattern=%-5p: %m%n
#log4j.appender.dest1.layout.ConversionPattern=%-4r [%t] %-5p %c %x - %m%n
#log4j.appender.dest1.layout.ConversionPattern=%-4r(%d) [%t] %-5p %c(%l:%M) %x - %m%n

# dest2 includes the thread name and elapsed milliseconds.
# Note: %r is elapsed milliseconds.
# Note: %t is the thread name.
# See http://logging.apache.org/log4j/1.2/apidocs/org/apache/log4j/PatternLayout.html
log4j.appender.dest2=org.apache.log4j.ConsoleAppender
log4j.appender.dest2.layout=org.apache.log4j.PatternLayout
log4j.appender.dest2.layout.ConversionPattern=%-5p: %r %X{hostname} %X{serviceUUID} %X{taskname} %X{timestamp} %X{resources} %t %l: %m%n

## destPlain
#log4j.appender.destPlain=org.apache.log4j.ConsoleAppender
#log4j.appender.destPlain.layout=org.apache.log4j.PatternLayout
#log4j.appender.destPlain.layout.ConversionPattern=

##
# Summary query evaluation log (tab delimited file).
#log4j.logger.com.bigdata.bop.engine.QueryLog=INFO,queryLog
log4j.additivity.com.bigdata.bop.engine.QueryLog=false
log4j.appender.queryLog=org.apache.log4j.FileAppender
log4j.appender.queryLog.Threshold=ALL
log4j.appender.queryLog.File=queryLog.csv
log4j.appender.queryLog.Append=true
# I find that it is nicer to have this unbuffered since you can see what
# is going on and to make sure that I have complete rule evaluation logs
# on shutdown.
log4j.appender.queryLog.BufferedIO=false
log4j.appender.queryLog.layout=org.apache.log4j.PatternLayout
log4j.appender.queryLog.layout.ConversionPattern=%m

##
# BOp run state trace (tab delimited file).  Uncomment the next line to enable.
#log4j.logger.com.bigdata.bop.engine.RunState$TableLog=INFO,queryRunStateLog
log4j.additivity.com.bigdata.bop.engine.RunState$TableLog=false
log4j.appender.queryRunStateLog=org.apache.log4j.FileAppender
log4j.appender.queryRunStateLog.Threshold=ALL
log4j.appender.queryRunStateLog.File=queryRunState.log
log4j.appender.queryRunStateLog.Append=true
# I find that it is nicer to have this unbuffered since you can see what
# is going on and to make sure that I have complete rule evaluation logs
# on shutdown.
log4j.appender.queryRunStateLog.BufferedIO=false
log4j.appender.queryRunStateLog.layout=org.apache.log4j.PatternLayout
log4j.appender.queryRunStateLog.layout.ConversionPattern=%m
